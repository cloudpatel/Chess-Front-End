{"ast":null,"code":"var _jsxFileName = \"/Users/cloudpatel/Documents/ Y-Stem internship/chessboard-app/src/Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Square from './Square';\nimport pieces from './Piece';\nimport './Board.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialBoard = [['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'], ['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'], ['', '', '', '', '', '', '', ''], ['', '', '', '', '', '', '', ''], ['', '', '', '', '', '', '', ''], ['', '', '', '', '', '', '', ''], ['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'], ['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R']];\nconst Board = () => {\n  _s();\n  const [board, setBoard] = useState(initialBoard);\n  const handleSquareClick = (row, col) => {\n    // Add logic to handle piece movement\n  };\n  const renderSquare = (row, col, piece) => {\n    const isBlack = (row + col) % 2 === 1;\n    const color = isBlack ? 'black' : 'white';\n    return /*#__PURE__*/_jsxDEV(Square, {\n      color: color,\n      piece: pieces[piece],\n      onClick: () => handleSquareClick(row, col)\n    }, `${row}-${col}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-inner\",\n      children: board.map((row, rowIndex) => row.map((piece, colIndex) => renderSquare(rowIndex, colIndex, piece)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"axTAhf4o3lAgoZdxqAh2v6N6g60=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","Square","pieces","jsxDEV","_jsxDEV","initialBoard","Board","_s","board","setBoard","handleSquareClick","row","col","renderSquare","piece","isBlack","color","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","children","map","rowIndex","colIndex","_c","$RefreshReg$"],"sources":["/Users/cloudpatel/Documents/ Y-Stem internship/chessboard-app/src/Board.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Square from './Square';\nimport pieces from './Piece';\nimport './Board.css';\n\nconst initialBoard = [\n  ['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'],\n  ['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'],\n  ['', '', '', '', '', '', '', ''],\n  ['', '', '', '', '', '', '', ''],\n  ['', '', '', '', '', '', '', ''],\n  ['', '', '', '', '', '', '', ''],\n  ['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'],\n  ['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R'],\n];\n\nconst Board = () => {\n  const [board, setBoard] = useState(initialBoard);\n\n  const handleSquareClick = (row, col) => {\n    // Add logic to handle piece movement\n  };\n\n  const renderSquare = (row, col, piece) => {\n    const isBlack = (row + col) % 2 === 1;\n    const color = isBlack ? 'black' : 'white';\n    return (\n      <Square\n        key={`${row}-${col}`}\n        color={color}\n        piece={pieces[piece]}\n        onClick={() => handleSquareClick(row, col)}\n      />\n    );\n  };\n\n  return (\n    <div className=\"board\">\n      <div className=\"board-inner\">\n        {board.map((row, rowIndex) =>\n          row.map((piece, colIndex) => renderSquare(rowIndex, colIndex, piece))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,SAAS;AAC5B,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,YAAY,GAAG,CACnB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EACxC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EACxC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAChC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAChC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAChC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAChC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EACxC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CACzC;AAED,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAACK,YAAY,CAAC;EAEhD,MAAMK,iBAAiB,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAK;IACtC;EAAA,CACD;EAED,MAAMC,YAAY,GAAGA,CAACF,GAAG,EAAEC,GAAG,EAAEE,KAAK,KAAK;IACxC,MAAMC,OAAO,GAAG,CAACJ,GAAG,GAAGC,GAAG,IAAI,CAAC,KAAK,CAAC;IACrC,MAAMI,KAAK,GAAGD,OAAO,GAAG,OAAO,GAAG,OAAO;IACzC,oBACEX,OAAA,CAACH,MAAM;MAELe,KAAK,EAAEA,KAAM;MACbF,KAAK,EAAEZ,MAAM,CAACY,KAAK,CAAE;MACrBG,OAAO,EAAEA,CAAA,KAAMP,iBAAiB,CAACC,GAAG,EAAEC,GAAG;IAAE,GAHtC,GAAGD,GAAG,IAAIC,GAAG,EAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIrB,CAAC;EAEN,CAAC;EAED,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,OAAO;IAAAC,QAAA,eACpBnB,OAAA;MAAKkB,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzBf,KAAK,CAACgB,GAAG,CAAC,CAACb,GAAG,EAAEc,QAAQ,KACvBd,GAAG,CAACa,GAAG,CAAC,CAACV,KAAK,EAAEY,QAAQ,KAAKb,YAAY,CAACY,QAAQ,EAAEC,QAAQ,EAAEZ,KAAK,CAAC,CACtE;IAAC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACd,EAAA,CA7BID,KAAK;AAAAqB,EAAA,GAALrB,KAAK;AA+BX,eAAeA,KAAK;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}